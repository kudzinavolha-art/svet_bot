import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# üîë –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
API_TOKEN = os.getenv("API_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# üî¢ –ß–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç –∫ –≤–≤–µ–¥—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
ADD_NUMBER = 2933

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —á–∏—Å–ª–æ, –∏ —è –ø—Ä–∏–±–∞–≤–ª—é –∫ –Ω–µ–º—É 2380-347 —á—Ç–æ —Å–æ—Å—Ç–∞–≤–∏—Ç {ADD_NUMBER} üôÇ")

@dp.message_handler()
async def calculate(message: types.Message):
    try:
        num = float(message.text)
        result = num + ADD_NUMBER
        await message.reply(f"{num} + {ADD_NUMBER} = {result}")
    except ValueError:
        await message.reply("–û—Ç–ø—Ä–∞–≤—å —á–∏—Å–ª–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ ü§ì")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
